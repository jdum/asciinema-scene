[tool.poetry]
name = "asciinema_scene"
version = "0.8.0"
description = "Toolbox to edit asciinema screencasts (sciine)."
authors = ["Jerome Dumonteil <jerome.dumonteil@gmail.com>"]
repository = "https://github.com/jdum/asciinema-scene"
documentation = "https://jdum.github.io/asciinema-scene/"
readme = "README.md"
license = "MIT"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [
  {include = "asciinema_scene"}
]

[tool.poetry.scripts]
sciine = "asciinema_scene.sciine:cli"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
click = "^8"

[tool.poetry.group.dev.dependencies]
urllib3 = ">1.22,<2"
pytest = "*"
pytest-cov = "*"
deptry = "*"
mypy = "*"
pre-commit = "^2.20.0"
tox = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.mypy]
files = ["asciinema_scene"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py312"
line-length = 88
fix = false
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    #Use specific rule codes when ignoring type issues
    "PGH003",
    #check for execution of untrusted input
    "S603",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["asciinema_scene"]
